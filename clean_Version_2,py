import pandas as pd
from ydata_profiling import ProfileReport
import os
# Control and dataset loading
def charger_donnees(fichier: str) -> pd.DataFrame:
    extension = os.path.splitext(fichier)[-1].lower()

    if extension == ".csv":
        return pd.read_csv(fichier)
    elif extension in [".xls", ".xlsx"]:
        return pd.read_excel(fichier)
    elif extension == ".json":
        return pd.read_json(fichier)
    elif extension == ".parquet":
        return pd.read_parquet(fichier)
    elif extension == ".txt":
        return pd.read_csv(fichier, delimiter="\t")
    else:
        raise ValueError(f"Extension de fichier non support√©e : {extension}")

def main():
    # Demande √† l‚Äôutilisateur de donner le chemin
    fichier = input("üëâ Entrez le chemin de votre fichier (CSV, Excel, JSON, Parquet) : ").strip()
    sortie = input("üëâ Nom du rapport de sortie (ex: rapport.html) [Entr√©e = rapport_analyse.html] : ").strip() or "rapport_analyse.html"

    try:
        if not os.path.exists(fichier):
            raise FileNotFoundError(f"Le fichier {fichier} n'existe pas.")

        df = charger_donnees(fichier)
        print(f"‚úÖ Dataset charg√© : {df.shape[0]} lignes, {df.shape[1]} colonnes")

        profile = ProfileReport(df, title="Profiling Report", explorative=True, minimal=False)
        profile.to_file(sortie)

        print(f"üìä Rapport g√©n√©r√© : ouvre '{sortie}' dans ton navigateur.")

    except Exception as e:
        print(f"‚ùå Erreur : {e}")

if __name__ == "__main__":
    main()
